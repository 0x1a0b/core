

opcode:reverse:nginxStatus {{

extends: http:reverse:opcodes
scope: reverseSite:locations
type: object-opt
description: nginxStatus - Mimic nginx status

mark {{
Opcode used to mimics nginx stub status page. It only works in reverse proxy operation.

This opcode blocks then a special location has to be performed in site configuration.

No options provided.

*Info*: This opcode can be used only in forward proxy operation
}}

example {{
locations: [
    { 
        name: 'status',
        regex: /^\/status/,
        pipeline: [
            ['nginxStatus'],
        ]
    }
],
}}

}}


opcode:reverse:injection {{

extends: http:reverse:opcodes
scope: reverseSite:locations
type: object-opt
description: injection - On-the-fly HTML code injection

param-code: HTML to be embedded in the page

mark {{
Injection is an opcode used to embed code on-the-fly into HTML pages.

Once the DOM structure is identified the process will inject the HTML code (specified in the example below) in the body of the page.

The process is fully async. 

}}

example {{
['injection', {
	code: "<h1>w00t injection</h1>"
}],

}}

}}


opcode:reverse:realIp {{

extends: http:reverse:opcodes
scope: reverseSite:locations
type: object-opt
description: Real IP operand

mark {{
Set the real user IP address into the request header.

**realIp** operand takes an optionnal argument used to set the headername.

By default is has been set to **X-Real-Ip**  

}}

example {{
['realIp', "X-Real-Ip"],
}}

}}

opcode:hsts {{

extends: http:reverse:opcodes
scope: pipeline
type: object-kv
description: hsts - HTTP Strict Transport Security
since: 1.7

param-age: HSTS Maximum age (default 10512000)
param-subDomain: Include subdomains, true or false (default true)
param-preload: Activate preload, true or false (default true)

mark {{
HTTP Strict Transport Security (HSTS) is a web security policy mechanism which is necessary 
to protect secure HTTPS websites against downgrade attacks, and which greatly simplifies 
protection against cookie hijacking. It allows web servers to declare that web browsers 
(or other complying user agents) should only interact with it using secure HTTPS connections, 
and never via the insecure HTTP protocol. 

HSTS is an IETF standards track protocol and is specified in RFC 6797.

The HSTS Policy is communicated by the server to the user agent via a HTTP response header 
field named "Strict-Transport-Security". HSTS Policy specifies a period of time during which 
the user agent shall access the server in a secure-only fashion.
}}

example {{
['hsts', { 
	age: 10512000,
	subDomain: true,
	preload: true,
}],
}}

}}

