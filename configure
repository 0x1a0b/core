#!/bin/sh

PREFIX_ROOT=/
PREFIX_SHARE=usr/local/share
PREFIX_CONF=etc
PREFIX_BIN=usr/local/sbin
PREFIX_VAR=var
PREFIX_DATA=home/gatejs-data

INIT_FILE_SRC=gatejs.initd
INIT_FILE_DIR=/etc/init.d
INIT_FILE_DST=gatejs

if [ -r /etc/redhat-release ]; then
	INIT_FILE_SRC=gatejs.initd.redhat
	INIT_FILE_DIR=/etc/init.d
	INIT_FILE_DST=gatejs
elif [ -r /etc/debian_version ]; then
	INIT_FILE_SRC=gatejs.initd
	INIT_FILE_DIR=/etc/init.d
	INIT_FILE_DST=gatejs
elif [ "$(uname -s)" = "Darwin" ]; then
	INIT_FILE_SRC=gatejs.plist
	INIT_FILE_DIR=/Library/LaunchDaemons
	INIT_FILE_DST=com.gatejs.daemon.plist
else
	echo "Your operating system does not seems to be supported!"
	exit 1
fi

while test "$#" -gt 0; do
	case "$1" in
		'--help'|'-h'|'-help')
			echo "Available options :"
			echo "--help"
			echo "--prefix-root   ($PREFIX_ROOT)"
			echo "--prefix-share  ($PREFIX_SHARE)"
			echo "--prefix-conf   ($PREFIX_CONF)"
			echo "--prefix-bin    ($PREFIX_BIN)"
			echo "--prefix-var    ($PREFIX_VAR)"
			echo "--prefix-data   ($PREFIX_DATA)"
			echo "--init-file     ($INIT_FILE_DST)"
			echo "--init-file-dir ($INIT_FILE_DIR)"
			exit 0
			;;
		'--prefix-root')
			PREFIX_ROOT="$2"
			shift
			;;
		'--prefix-root='*)
			PREFIX_ROOT="`echo "$1" | cut -d= -f2-`"
			;;
		'--prefix-share')
			PREFIX_SHARE="$2"
			shift
			;;
		'--prefix-share='*)
			PREFIX_SHARE="`echo "$1" | cut -d= -f2-`"
			;;
		'--prefix-conf')
			PREFIX_CONF="$2"
			shift
			;;
		'--prefix-conf='*)
			PREFIX_CONF="`echo "$1" | cut -d= -f2-`"
			;;
		'--prefix-bin')
			PREFIX_BIN="$2"
			shift
			;;
		'--prefix-bin='*)
			PREFIX_BIN="`echo "$1" | cut -d= -f2-`"
			;;
		'--prefix-var')
			PREFIX_VAR="$2"
			shift
			;;
		'--prefix-var='*)
			PREFIX_VAR="`echo "$1" | cut -d= -f2-`"
			;;
		'--prefix-data')
			PREFIX_DATA="$2"
			shift
			;;
		'--prefix-data='*)
			PREFIX_DATA="`echo "$1" | cut -d= -f2-`"
			;;
		'--init-file')
			INIT_FILE_DST="$2"
			shift
			;;
		'--init-file='*)
			INIT_FILE_DST="`echo "$1" | cut -d= -f2-`"
			;;
		'--init-file-dir')
			INIT_FILE_DIR="$2"
			shift
			;;
		'--init-file-dir='*)
			INIT_FILE_DIR="`echo "$1" | cut -d= -f2-`"
			;;
	esac
	shift
done

PREFIX_SHARE="$PREFIX_ROOT$PREFIX_SHARE"
PREFIX_CONF="$PREFIX_ROOT$PREFIX_CONF"
PREFIX_BIN="$PREFIX_ROOT$PREFIX_BIN"
PREFIX_VAR="$PREFIX_ROOT$PREFIX_VAR"
PREFIX_DATA="$PREFIX_ROOT$PREFIX_DATA"

PREFIX_SHARE_SED=`echo "$PREFIX_SHARE" | sed -e 's/~/\\~/g'`
PREFIX_CONF_SED=`echo "$PREFIX_CONF" | sed -e 's/~/\\~/g'`
PREFIX_BIN_SED=`echo "$PREFIX_BIN" | sed -e 's/~/\\~/g'`
PREFIX_VAR_SED=`echo "$PREFIX_VAR" | sed -e 's/~/\\~/g'`
PREFIX_DATA_SED=`echo "$PREFIX_DATA" | sed -e 's/~/\\~/g'`
SED_CMD="s~%PREFIX_SHARE%~$PREFIX_SHARE_SED~g; s~%PREFIX_CONF%~$PREFIX_CONF_SED~g; s~%PREFIX_BIN%~$PREFIX_BIN_SED~g; s~%PREFIX_VAR%~$PREFIX_VAR_SED~g; s~%PREFIX_DATA%~$PREFIX_DATA_SED~g"

cat <<EOF > Makefile
PATH := $PREFIX_SHARE/gatejs/node/bin:\${PATH}

all:
	if test \`ls ./deps/nodejs | wc -l\` -eq 0; then make git-submodules-up; fi
	cd ./deps/nodejs && ./configure --prefix="$PREFIX_SHARE/gatejs/node"
	+make -C ./deps/nodejs
	
install:
	+make -C ./deps/nodejs install
	$PREFIX_SHARE/gatejs/node/bin/npm install -g node-gyp
	
	if ! grep -qFe '$PREFIX_SHARE/gatejs/node/include' src/lib/ipaddr/binding.gyp; then\
		sed -i -e "s~\([\"']target_name[\"']\)~'include_dirs': ['$PREFIX_SHARE/gatejs/node/include'],\1~" src/lib/ipaddr/binding.gyp;\
	fi
	+make -C src/lib/ipaddr/ rebuild NODE_GYP="$PREFIX_SHARE/gatejs/node/bin/node-gyp"
	+make -C src/lib/core/ rebuild NODE_GYP="$PREFIX_SHARE/gatejs/node/bin/node-gyp"
	if test $(uname -s) = "Linux"; then make -C src/lib/tproxy/ rebuild NODE_GYP="$PREFIX_SHARE/gatejs/node/bin/node-gyp"; fi
	
	mkdir -p "$PREFIX_SHARE/gatejs"
	cp -r src/* "$PREFIX_SHARE/gatejs"
	if [ ! -d "$PREFIX_CONF/gatejs" ]; then mkdir -p "$PREFIX_CONF/gatejs"; cp -r deps/etc/* "$PREFIX_CONF/gatejs"; fi
	
	sed -i -e "$SED_CMD" "$PREFIX_CONF/gatejs/config.js"
	
	mkdir -p "$PREFIX_BIN"
	sed -e "$SED_CMD" "./bin/gatejs" > "$PREFIX_BIN/gatejs"
	chmod +x "$PREFIX_BIN/gatejs"
	
	mkdir -p "$INIT_FILE_DIR"
	sed -e "$SED_CMD" "./bin/$INIT_FILE_SRC" > "$INIT_FILE_DIR/$INIT_FILE_DST"
	chmod +x "$INIT_FILE_DIR/$INIT_FILE_DST"
	
	if which systemctl > /dev/null 2>&1; then systemctl daemon-reload; fi
	
	if [ "$(uname -s)" = "Darwin" ] && which launchctl > /dev/null 2>&1; then launchctl load "$INIT_FILE_DIR/$INIT_FILE_DST"; fi
	
	@echo "Gatejs is installed."

git-submodules-up:
	git submodule update --init --recursive

EOF

printVar() {
	val=`eval echo '$'$1`
	printf "%-15s = %s\n" "$1" "$val"
}

echo "Variables :"
printVar PREFIX_ROOT
printVar PREFIX_SHARE
printVar PREFIX_CONF
printVar PREFIX_BIN
printVar PREFIX_VAR
printVar PREFIX_DATA
printVar INIT_FILE_SRC
printVar INIT_FILE_DIR
printVar INIT_FILE_DST
